{"ast":null,"code":"import _defineProperty from \"/home/rao/React/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/rao/React/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/rao/React/app/src/zhujian/Table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Icon, Spin, Modal } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport 'antd/dist/antd.css';\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            handleSave = _this$props.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, {}, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            dataIndex = _this$props2.dataIndex,\n            record = _this$props2.record,\n            title = _this$props2.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = _id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item._id !== _id)\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, {}, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.columns = [_objectSpread({\n      title: 'name',\n      dataIndex: 'who',\n      width: '30%',\n      editable: true\n    }, this.getColumnSearchProps('who')), _objectSpread({\n      title: '创建时间',\n      dataIndex: 'createdAt'\n    }, this.getColumnSearchProps('createdAt')), _objectSpread({\n      title: '发表时间',\n      dataIndex: 'publishedAt'\n    }, this.getColumnSearchProps('publishedAt')), _objectSpread({\n      title: '内容',\n      dataIndex: 'desc'\n    }, this.getColumnSearchProps('desc')), {\n      title: '删除',\n      dataIndex: 'operation',\n      render: (text, record) => this.state.dataSource.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")) : null\n    }];\n    this.state = {\n      dataSource: null,\n      count: 2\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.getColumnSearchProps = this.getColumnSearchProps.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  // 更新组件\n  setSearchTopStories(resule) {\n    let arr = [];\n    let data = resule.results;\n\n    for (let i in data) {\n      arr.push(data[i]);\n    }\n\n    let arr2 = [].concat.apply([], arr);\n    this.setState({\n      dataSource: arr2\n    });\n  }\n\n  //生命周期 加载后\n  componentDidMount() {\n    fetch('http://gank.io/api/today').then(resource => resource.json()).then(resule => this.setSearchTopStories(resule));\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, dataSource ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"\\u521B\\u5EFA\"), React.createElement(Modal, {\n      visible: visible,\n      title: \"Title\",\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      footer: [React.createElement(Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Return\"), React.createElement(Button, {\n        key: \"submit\",\n        type: \"primary\",\n        loading: loading,\n        onClick: this.handleOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Submit\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Some contents...\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Some contents...\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Some contents...\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Some contents...\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Some contents...\")), React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      rowKey: dataSource => dataSource._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })) : React.createElement(Spin, {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Mytable extends Component {\n  render() {\n    return React.createElement(EditableTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Mytable;","map":{"version":3,"sources":["/home/rao/React/app/src/zhujian/Table.js"],"names":["React","Component","Table","Input","Button","Popconfirm","Form","Icon","Spin","Modal","Highlighter","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","EditableTable","constructor","handleDelete","_id","dataSource","filter","item","row","newData","findIndex","key","splice","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","searchInput","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","text","searchedColumn","backgroundColor","searchText","columns","length","count","setSearchTopStories","bind","resule","arr","data","results","i","push","arr2","concat","apply","componentDidMount","fetch","then","resource","json","components","body","cell","map","col","onCell","showModal","handleOk","handleCancel","loading","Mytable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Icon, Spin, Modal } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport 'antd/dist/antd.css';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'name',\n        dataIndex: 'who',\n        width: '30%',\n        editable: true,\n        ...this.getColumnSearchProps('who'),\n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createdAt',\n        ...this.getColumnSearchProps('createdAt'),\n        \n      },\n      {\n        title: '发表时间',\n        dataIndex: 'publishedAt',\n        ...this.getColumnSearchProps('publishedAt'),\n      },\n      {\n        title: '内容',\n        dataIndex: 'desc',\n        ...this.getColumnSearchProps('desc'),\n      },\n      {\n        title: '删除',\n        dataIndex: 'operation',\n        render: (text, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record._id)}>\n              <a>删除</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n\n    this.state = {\n      dataSource: null,\n      count: 2,\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.getColumnSearchProps = this.getColumnSearchProps.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n \n  handleDelete = _id => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item._id !== _id) });\n  };\n\n  // handleAdd = () => {\n  //   const { count, dataSource } = this.state;\n  //   const newData = {\n  //     key: count,\n  //     _id: count+1,\n  //     who: 'fingdo',\n  //     createdAt: `2018-10-08T07:24:14.959Z`,\n  //     publishedAt: `2019-04-10T00:00:00.0Z`,\n  //     desc: `极简 Android 组件化方案 — AppJoint`,\n  //   };\n  //   this.setState({\n  //     dataSource: [...dataSource, newData],\n  //     count: count + 1,\n  //   });\n  // };\n\n  handleSave = row => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n    this.setState({ dataSource: newData });\n  };\n\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n    (this.state.searchedColumn === dataIndex) ?\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n      : text\n    ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({ \n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n      });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  // 更新组件\n  setSearchTopStories(resule){\n    let arr = [];\n    let data = resule.results;\n    for(let i in data){\n      arr.push(data[i])\n    }\n    let arr2 = [].concat.apply([],arr);\n    this.setState({dataSource: arr2});\n  };\n  //生命周期 加载后\n  componentDidMount(){\n    fetch('http://gank.io/api/today')\n    .then(resource=> resource.json())\n    .then(resule => this.setSearchTopStories(resule));\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div>\n        {(dataSource)\n          ?<div>\n            <Button type=\"primary\" onClick={this.showModal}>\n              创建\n            </Button>\n            <Modal\n              visible={visible}\n              title=\"Title\"\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n              footer={[\n                <Button key=\"back\" onClick={this.handleCancel}>\n                  Return\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                  Submit\n                </Button>,\n              ]}\n            >\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n        </Modal>\n              <Table\n                components={components}\n                rowClassName={() => 'editable-row'}\n                bordered\n                dataSource={dataSource}\n                columns={columns}\n                rowKey = {dataSource=>dataSource._id}\n              />\n            </div>\n          : <Spin style={{}}/>\n        }\n      </div>\n    );\n  }\n}\nclass Mytable extends Component{\n  render(){\n    return <EditableTable />\n  }\n}\n\nexport default Mytable;"]},"metadata":{},"sourceType":"module"}