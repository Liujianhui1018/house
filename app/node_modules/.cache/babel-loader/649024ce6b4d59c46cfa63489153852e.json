{"ast":null,"code":"import _defineProperty from \"/home/rao/React/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/rao/React/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/rao/React/app/src/Components/Table/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\nimport 'antd/dist/antd.css';\nconst data = [];\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.state = {\n      data,\n      editingKey: ''\n    };\n    this.columns = [_objectSpread({\n      title: '名称',\n      dataIndex: 'who',\n      width: '10%',\n      editable: true\n    }, this.getColumnSearchProps('who')), _objectSpread({\n      title: '类型',\n      dataIndex: 'type',\n      width: '10%',\n      editable: true\n    }, this.getColumnSearchProps('who')), _objectSpread({\n      title: '网址',\n      dataIndex: 'url',\n      width: '20%'\n    }, this.getColumnSearchProps('createdAt')), _objectSpread({\n      title: '创建时间',\n      width: '15%',\n      dataIndex: 'createdAt'\n    }, this.getColumnSearchProps('createdAt')), _objectSpread({\n      title: '发表时间',\n      width: '15%',\n      dataIndex: 'publishedAt'\n    }, this.getColumnSearchProps('publishedAt')), _objectSpread({\n      title: '内容',\n      width: '25%',\n      dataIndex: 'desc'\n    }, this.getColumnSearchProps('desc')), {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Save\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    }];\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, {}, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  } //获取数据后更新组件\n\n\n  setSearchTopStories(res) {\n    let arr = [];\n    let data1 = res.results;\n\n    for (let key in data1) {\n      arr.push(data1[key]);\n    }\n\n    let arr1 = [].concat.apply([], arr);\n    let arr2 = [];\n\n    for (let i = 0; i < arr1.length; i++) {\n      arr2.push({\n        key: arr1[i]._id,\n        createdAt: arr1[i].createdAt,\n        desc: arr1[i].desc,\n        publishedAt: arr1[i].publishedAt,\n        who: arr1[i].who,\n        type: arr1[i].type,\n        url: arr1[i].url,\n        used: true\n      });\n    }\n\n    this.setState({\n      data: arr2\n    });\n  } //生命周期  加载后\n\n\n  componentDidMount() {\n    fetch('http://gank.io/api/today').then(res => res.json()).then(res => this.setSearchTopStories(res));\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: this.state.data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component {\n  render() {\n    return React.createElement(EditableFormTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Mytable; // ReactDOM.render(<EditableFormTable />, mountNode);","map":{"version":3,"sources":["/home/rao/React/app/src/Components/Table/index.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","data","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","EditableTable","constructor","isEditing","key","state","editingKey","cancel","setState","columns","width","editable","getColumnSearchProps","text","form","save","marginRight","edit","setSearchTopStories","bind","validateFields","error","row","newData","findIndex","item","splice","push","res","arr","data1","results","arr1","concat","apply","arr2","i","length","_id","createdAt","desc","publishedAt","who","type","url","used","componentDidMount","fetch","then","json","components","body","cell","map","col","onCell","onChange","EditableFormTable","create","Mytable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst data = [];\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === 'number') {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      data, \n      editingKey: '' \n    };\n    this.columns = [\n      {\n        title: '名称',\n        dataIndex: 'who',\n        width: '10%',\n        editable: true,\n        ...this.getColumnSearchProps('who'),\n      },\n      {\n        title: '类型',\n        dataIndex: 'type',\n        width: '10%',\n        editable: true,\n        ...this.getColumnSearchProps('who'),\n      },\n      {\n        title: '网址',\n        dataIndex: 'url',\n        width: '20%',\n        ...this.getColumnSearchProps('createdAt'),\n        \n      },\n      {\n        title: '创建时间',\n        width: '15%',\n        dataIndex: 'createdAt',\n        ...this.getColumnSearchProps('createdAt'),\n        \n      },\n      {\n        title: '发表时间',\n        width: '15%',\n        dataIndex: 'publishedAt',\n        ...this.getColumnSearchProps('publishedAt'),\n      },\n      {\n        title: '内容',\n        width: '25%',\n        dataIndex: 'desc',\n        ...this.getColumnSearchProps('desc'),\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                <a>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              Edit\n            </a>\n          );\n        },\n      },\n    ];\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n  }\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ data: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ data: newData, editingKey: '' });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  //获取数据后更新组件\n  setSearchTopStories(res){\n    let arr = [];\n    let data1 = res.results;\n    for(let key in data1){\n      arr.push(data1[key])\n    }\n    let arr1 = [].concat.apply([],arr);\n    let arr2 = [];\n    for(let i=0; i<arr1.length; i++){\n      arr2.push({\n        key: arr1[i]._id,\n        createdAt: arr1[i].createdAt,\n        desc: arr1[i].desc,\n        publishedAt: arr1[i].publishedAt,\n        who: arr1[i].who,\n        type: arr1[i].type,\n        url: arr1[i].url,\n        used: true,\n      });\n    }\n    this.setState({data:arr2})\n  }\n\n  //生命周期  加载后\n  componentDidMount(){\n    fetch('http://gank.io/api/today')\n    .then(res => res.json())\n    .then( res => this.setSearchTopStories(res));\n    \n  }\n\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <EditableContext.Provider value={this.props.form}>\n        <Table\n          components={components}\n          bordered\n          dataSource={this.state.data}\n          columns={columns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: this.cancel,\n          }}\n        />\n      </EditableContext.Provider>\n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component{\n    render(){\n        return <EditableFormTable />\n    }\n}\n\nexport default Mytable;\n\n// ReactDOM.render(<EditableFormTable />, mountNode);"]},"metadata":{},"sourceType":"module"}