{"ast":null,"code":"import _defineProperty from \"/home/rao/React/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/rao/React/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/rao/React/app/src/Components/Table/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button, Modal, Radio } from 'antd';\nimport 'antd/dist/antd.css';\nconst data = null;\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.handleDelete = key => {\n      console.log(key);\n      const data = [...this.state.data];\n      this.setState({\n        data: data.filter(item => item.key !== key)\n      });\n    };\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.state = {\n      data,\n      editingKey: ''\n    };\n    this.columns = [{\n      title: '名称',\n      dataIndex: 'who',\n      editable: true\n    }, {\n      title: '类型',\n      dataIndex: 'type',\n      editable: true\n    }, {\n      title: '网址',\n      dataIndex: 'url',\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: '创建时间',\n      dataIndex: 'createdAt',\n      editable: true\n    }, {\n      title: '发表时间',\n      dataIndex: 'publishedAt',\n      editable: true\n    }, {\n      title: '内容',\n      width: '25%',\n      dataIndex: 'desc',\n      editable: true\n    }, {\n      title: '修改',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\")), React.createElement(Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u8981\\u53D6\\u6D88\\u5417?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\");\n      }\n    }, {\n      title: '删除',\n      dataIndex: 'delete',\n      render: (text, record) => this.state.data.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"\\u4F60\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u5417\\uFF1F\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")) : null\n    }];\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, {}, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  } //获取数据后更新组件\n\n\n  setSearchTopStories(res) {\n    let arr = [];\n    let data1 = res.results;\n\n    for (let key in data1) {\n      arr.push(data1[key]);\n    }\n\n    let arr1 = [].concat.apply([], arr);\n    let arr2 = [];\n\n    for (let i = 0; i < arr1.length; i++) {\n      arr2.push({\n        key: arr1[i]._id,\n        createdAt: arr1[i].createdAt,\n        desc: arr1[i].desc,\n        publishedAt: arr1[i].publishedAt,\n        who: arr1[i].who,\n        type: arr1[i].type,\n        url: arr1[i].url,\n        used: true\n      });\n    }\n\n    this.setState({\n      data: arr2\n    });\n  } //生命周期  加载后\n\n\n  componentDidMount() {\n    fetch('http://gank.io/api/today').then(res => res.json()).then(res => this.setSearchTopStories(res));\n  }\n\n  render() {\n    let data = this.state.data;\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: this.state.data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      style: {\n        marginLeft: '900px',\n        marginTop: '200px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component {\n  render() {\n    return React.createElement(EditableFormTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Mytable; // ReactDOM.render(<EditableFormTable />, mountNode);","map":{"version":3,"sources":["/home/rao/React/app/src/Components/Table/index.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Spin","Button","Modal","Radio","data","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","EditableTable","constructor","isEditing","key","state","editingKey","handleDelete","console","log","setState","filter","item","cancel","columns","editable","text","width","form","save","marginRight","edit","length","setSearchTopStories","bind","validateFields","error","row","newData","findIndex","splice","push","res","arr","data1","results","arr1","concat","apply","arr2","i","_id","createdAt","desc","publishedAt","who","type","url","used","componentDidMount","fetch","then","json","components","body","cell","map","col","onCell","onChange","marginLeft","marginTop","EditableFormTable","create","Mytable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button, Modal, Radio } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst data = null;\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === 'number') {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      data,\n      editingKey: '' \n    };\n    this.columns = [\n      {\n        title: '名称',\n        dataIndex: 'who',\n        editable: true,\n      },\n      {\n        title: '类型',\n        dataIndex: 'type',\n        editable: true,\n      },\n      {\n        title: '网址',\n        dataIndex: 'url',\n        render :text => <a href={text} target='_blank'>链接</a>\n        \n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createdAt',\n        editable: true,\n        \n      },\n      {\n        title: '发表时间',\n        dataIndex: 'publishedAt',\n        editable: true,\n      },\n      {\n        title: '内容',\n        width: '25%',\n        dataIndex: 'desc',\n        editable: true,\n      },\n      {\n        title: '修改',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    保存\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"确定要取消吗?\" onConfirm={() => this.cancel(record.key)}>\n                <a>取消</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              修改\n            </a>\n          );\n        },\n      },\n      {\n        title: '删除',\n        dataIndex: 'delete',\n        render: (text, record) =>\n          this.state.data.length >= 1 ? (\n            <Popconfirm title=\"你确定要删除吗？\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>删除</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  handleDelete = key => {\n    console.log(key)\n    const data = [...this.state.data];\n    this.setState({ data: data.filter(item => item.key !== key) });\n  };\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ data: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ data: newData, editingKey: '' });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  //获取数据后更新组件\n  setSearchTopStories(res){\n    let arr = [];\n    let data1 = res.results;\n    for(let key in data1){\n      arr.push(data1[key])\n    }\n    let arr1 = [].concat.apply([],arr);\n    let arr2 = [];\n    for(let i=0; i<arr1.length; i++){\n      arr2.push({\n        key: arr1[i]._id,\n        createdAt: arr1[i].createdAt,\n        desc: arr1[i].desc,\n        publishedAt: arr1[i].publishedAt,\n        who: arr1[i].who,\n        type: arr1[i].type,\n        url: arr1[i].url,\n        used: true,\n      });\n    }\n    this.setState({data:arr2})\n  }\n\n  //生命周期  加载后\n  componentDidMount(){\n    fetch('http://gank.io/api/today')\n    .then(res => res.json())\n    .then( res => this.setSearchTopStories(res));\n    \n  }\n\n\n  render() {\n    let {data} = this.state;\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <div>\n        { data\n          ?<div>\n              <EditableContext.Provider value={this.props.form}>\n                <Table\n                  components={components}\n                  bordered\n                  dataSource={this.state.data}\n                  columns={columns}\n                  rowClassName=\"editable-row\"\n                  pagination={{\n                    onChange: this.cancel,\n                  }}\n                />\n              </EditableContext.Provider>\n            </div>\n          : <Spin style={{marginLeft:'900px',marginTop:'200px'}}/>\n        }\n      </div>\n      \n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component{\n    render(){\n        return <EditableFormTable />\n    }\n}\n\nexport default Mytable;\n\n// ReactDOM.render(<EditableFormTable />, mountNode);"]},"metadata":{},"sourceType":"module"}