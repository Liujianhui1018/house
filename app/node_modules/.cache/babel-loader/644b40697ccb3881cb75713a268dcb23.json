{"ast":null,"code":"import _defineProperty from \"/home/duo/\\u684C\\u9762/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH, DELETE, SEARCH, RESET, ISEDITING, CANCEL, SAVE, EDIT } from '../actionType/actionType'; //初始化数据\n\nconst initstate = {\n  data: ''\n}; //最终的数据处理结果\n\nexport const todolist = (state = initstate, action) => {\n  switch (action.type) {\n    //获取页面数据\n    case FETCH:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //删除\n\n    case DELETE:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //根据人名搜索\n\n    case SEARCH:\n      console.log(111);\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //重置\n\n    case RESET:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //编辑开关\n\n    case EDIT:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //编辑进行中\n\n    case ISEDITING:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //修改之取消\n\n    case CANCEL:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //修改之保存\n\n    case SAVE:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/duo/桌面/app/src/reducers/todolist.js"],"names":["FETCH","DELETE","SEARCH","RESET","ISEDITING","CANCEL","SAVE","EDIT","initstate","data","todolist","state","action","type","payload","console","log"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAcC,MAAd,EAAqBC,MAArB,EAA4BC,KAA5B,EAAkCC,SAAlC,EAA4CC,MAA5C,EAAmDC,IAAnD,EAAwDC,IAAxD,QAAmE,0BAAnE,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAC;AADS,CAAlB,C,CAIA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACH,SAAP,EAAiBI,MAAjB,KAA4B;AAChD,UAAOA,MAAM,CAACC,IAAd;AAEI;AACA,SAAKb,KAAL;AACI,+BACOW,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AAKJ;;AACA,SAAKb,MAAL;AACI,+BACOU,KADP;AAEIF,QAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;AAKJ;;AACA,SAAKZ,MAAL;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACI,+BACOL,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AAKJ;;AACA,SAAKX,KAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AASJ;;AACA,SAAKP,IAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;AAIJ;;AACA,SAAKV,SAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AAIJ;;AACA,SAAKT,MAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AAIJ;;AACA,SAAKR,IAAL;AACI,+BACOK,KADP;AAEIF,QAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;;AAkBJ;AACI,aAAOH,KAAP;AA1ER;AA6EH,CA9EM","sourcesContent":["import {FETCH,DELETE,SEARCH,RESET,ISEDITING,CANCEL,SAVE,EDIT} from '../actionType/actionType';\n\n//初始化数据\nconst initstate = {\n    data:'',\n}\n\n//最终的数据处理结果\nexport const todolist = (state=initstate,action) => {\n    switch(action.type){\n\n        //获取页面数据\n        case FETCH :\n            return {\n                ...state,\n                data: action.payload,\n            }\n\n        //删除\n        case DELETE :\n            return {\n                ...state,\n                data:action.payload,\n            }\n\n        //根据人名搜索\n        case SEARCH : \n        console.log(111)  \n            return {\n                ...state,\n                data: action.payload,\n            }\n\n        //重置\n        case RESET :\n            return {\n                ...state,\n                data: action.payload,\n            }\n\n\n\n\n\n        //编辑开关\n        case EDIT :\n            return {\n                ...state,\n                data:action.payload,\n            }    \n        //编辑进行中\n        case ISEDITING :\n            return {\n                ...state,\n                data: action.payload,\n            }\n        //修改之取消\n        case CANCEL :\n            return {\n                ...state,\n                data: action.payload,\n            }   \n        //修改之保存\n        case SAVE :\n            return {\n                ...state,\n                data:action.payload,\n            }    \n                       \n\n\n\n\n\n\n\n\n\n\n\n\n\n        default:\n            return state;\n            \n    }\n}\n"]},"metadata":{},"sourceType":"module"}