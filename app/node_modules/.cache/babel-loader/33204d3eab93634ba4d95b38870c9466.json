{"ast":null,"code":"import _defineProperty from \"/home/duo/\\u684C\\u9762/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/duo/\\u684C\\u9762/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/duo/\\u684C\\u9762/app/src/Components/Table/index.js\",\n    _dec,\n    _class,\n    _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport CollectionCreateForm from '../Create/Create'; // import Search from '../Search/Search'\n\nimport Myinput from '../Input/Input';\nimport store from '../../store/store';\nimport { createFetchAction, deleteAction, SearchAction, ResetAction } from '../../action/action';\nimport { connect } from 'react-redux'; //把todolist从state中解构出来\n\nlet mapSetstateToProps = state => {\n  return {\n    todolist: state.todolist\n  };\n};\n\nlet mapDisPatchToprops = dispatch => {\n  return {\n    fetch: res => {\n      dispatch(createFetchAction(res));\n    },\n    delete: _id => {\n      dispatch(deleteAction(_id));\n    },\n    search: _id => {\n      dispatch(SearchAction(_id));\n    },\n    reset: () => {\n      dispatch(ResetAction());\n    }\n  };\n};\n\nconst EditableContext = React.createContext(); //修改类\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n} //主组件\n\n\nlet EditableTable = (_dec = connect(mapSetstateToProps, mapDisPatchToprops), _dec(_class = (_temp = class EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.listening = () => {\n      this.setState({\n        data: store.getState().todolist.data\n      });\n    };\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      const data = this.state.data;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        let time = new Date().valueOf();\n        values.key = time;\n        data.push(values);\n        form.resetFields();\n        this.setState({\n          data: data,\n          visible: false\n        });\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.state = {\n      editingKey: '',\n      visible: false,\n      loading: false,\n      dataSource: '',\n      list: ''\n    }; //订阅store,监听listening，来设置数据状态\n\n    store.subscribe(this.listening);\n    let _data = this.props.todolist.data;\n    this.handSearch = this.handSearch.bind(this);\n    this.handReset = this.handReset.bind(this);\n    this.columns = [{\n      title: '名称',\n      dataIndex: 'name',\n      editable: true\n    }, {\n      title: '简介',\n      dataIndex: 'desc',\n      editable: true\n    }, {\n      title: '网址',\n      dataIndex: 'url'\n    }, {\n      title: '类型',\n      dataIndex: 'type',\n      editable: true\n    }, {\n      title: '时间',\n      dataIndex: 'time',\n      editable: true\n    }, {\n      title: '修改',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\")), React.createElement(Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u8981\\u53D6\\u6D88\\u5417?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\");\n      }\n    }, {\n      title: '删除',\n      dataIndex: 'delete',\n      render: (text, record) => _data.length >= 0 ? React.createElement(Popconfirm, {\n        title: \"\\u4F60\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u5417\\uFF1F\",\n        onConfirm: () => this.props.delete(record._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")) : null\n    }];\n  } //改变数据状态方法\n\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, {}, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  //搜索方法\n  handSearch(value) {\n    this.props.search(value);\n  } //重置方法\n\n\n  handReset() {\n    this.props.reset();\n  } //生命周期  加载后\n\n\n  componentDidMount() {\n    fetch('http://localhost:8070/select').then(res => res.json()).then(res => this.props.fetch(res));\n  }\n\n  render() {\n    let data = this.props.todolist.data;\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Myinput, {\n      handSearch: this.handSearch,\n      handReset: this.handReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      style: {\n        marginLeft: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"\\u521B\\u5EFA\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      rowKey: data => data.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      style: {\n        marginLeft: '900px',\n        marginTop: '200px'\n      },\n      tip: \"\\u52A0\\u8F7D\\u4E2D...\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }));\n  }\n\n}, _temp)) || _class);\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component {\n  render() {\n    return React.createElement(EditableFormTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Mytable;","map":{"version":3,"sources":["/home/duo/桌面/app/src/Components/Table/index.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Spin","Button","Modal","CollectionCreateForm","Myinput","store","createFetchAction","deleteAction","SearchAction","ResetAction","connect","mapSetstateToProps","state","todolist","mapDisPatchToprops","dispatch","fetch","res","delete","_id","search","reset","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","EditableTable","constructor","listening","setState","data","getState","isEditing","key","editingKey","cancel","handleCancel","visible","handleCreate","form","formRef","validateFields","err","values","time","Date","valueOf","push","resetFields","showModal","saveFormRef","loading","dataSource","list","subscribe","handSearch","bind","handReset","columns","editable","text","save","marginRight","edit","length","error","row","newData","findIndex","item","splice","value","componentDidMount","then","json","components","body","cell","map","col","onCell","marginLeft","onChange","marginTop","EditableFormTable","create","Mytable"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport CollectionCreateForm from '../Create/Create'\n// import Search from '../Search/Search'\nimport Myinput from '../Input/Input'; \nimport store from '../../store/store';\nimport {createFetchAction,deleteAction,SearchAction,ResetAction} from '../../action/action';\nimport {connect} from 'react-redux';\n\n\n//把todolist从state中解构出来\nlet mapSetstateToProps = (state) => {\n  return {\n    todolist : state.todolist,\n  }\n}\n\nlet mapDisPatchToprops = (dispatch) => {\n  return {\n    fetch:(res)=>{\n      dispatch(createFetchAction(res))\n    },\n    delete:(_id)=>{\n      dispatch(deleteAction(_id))\n    },\n    search:(_id)=>{\n      dispatch(SearchAction(_id))\n    },\n    reset:()=>{\n      dispatch(ResetAction())\n    }\n  }\n}\n\n\nconst EditableContext = React.createContext();\n\n\n//修改类\nclass EditableCell extends React.Component {\n    getInput = () => {\n      if (this.props.inputType === 'number') {\n        return <InputNumber />;\n      }\n      return <Input />;\n    };\n  \n    renderCell = ({ getFieldDecorator }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return (\n        <td {...restProps}>\n          {editing ? (\n            <Form.Item style={{ margin: 0 }}>\n              {getFieldDecorator(dataIndex, {\n                rules: [\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ],\n                initialValue: record[dataIndex],\n              })(this.getInput())}\n            </Form.Item>\n          ) : (\n            children\n          )}\n        </td>\n      );\n    };\n  \n    render() {\n\n      return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n    }\n}\n\n//主组件\n@connect(mapSetstateToProps,mapDisPatchToprops)\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      editingKey: '',\n      visible: false, \n      loading: false,\n      dataSource: '',\n      list:'',\n    };\n\n    //订阅store,监听listening，来设置数据状态\n    store.subscribe(this.listening);\n    let data = this.props.todolist.data;\n\n    this.handSearch = this.handSearch.bind(this)\n    this.handReset = this.handReset.bind(this)\n    this.columns = [\n      {\n        title: '名称',\n        dataIndex: 'name',\n        editable: true,\n      },\n\n      {\n        title: '简介',\n        dataIndex: 'desc',\n        editable: true,\n      },\n\n      {\n        title: '网址',\n        dataIndex: 'url',\n      },\n\n      {\n        title: '类型',\n        dataIndex: 'type',\n        editable: true,\n      },\n\n      {\n        title: '时间',\n        dataIndex: 'time',\n        editable: true,\n      },\n      {\n        title: '修改',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    保存\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"确定要取消吗?\" onConfirm={() => this.cancel(record.key)}>\n                <a>取消</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              修改\n            </a>\n          );\n        },\n      },\n      {\n        title: '删除',\n        dataIndex: 'delete',\n\n        render: (text, record) =>\n          data.length >= 0 ? (\n            <Popconfirm title=\"你确定要删除吗？\" onConfirm={() =>this.props.delete(record._id)}>\n              <a>删除</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n  }\n\n  //改变数据状态方法\n  listening = () => {\n    this.setState ({\n      data:store.getState().todolist.data,\n    }) \n  }\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ data: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ data: newData, editingKey: '' });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  \n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  //添加方法\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const { data} = this.state;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      let time = (new Date()).valueOf();\n      values.key = time;\n      data.push(values);\n      form.resetFields();\n\n      this.setState({ \n        data: data, \n        visible: false \n      });\n    });\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  //搜索方法\n  handSearch(value){\n    this.props.search(value);\n  }\n\n  //重置方法\n  handReset(){\n    this.props.reset();\n  }\n\n\n  //生命周期  加载后\n  componentDidMount(){\n    fetch('http://localhost:8070/select')\n    .then(res => res.json())\n    .then( res => this.props.fetch(res))\n  }\n\n\n  render() {\n    let data = this.props.todolist.data;\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <div>\n        { data\n          ?<div>\n              \n              <Myinput handSearch={this.handSearch} handReset={this.handReset}></Myinput>\n              <Button type=\"primary\" onClick={this.showModal} style={{marginLeft:18}}>\n                创建\n              </Button>\n              <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n              />\n              <EditableContext.Provider value={this.props.form}>\n                <Table\n                  components={components}\n                  bordered\n                  dataSource={data}\n                  columns={columns}\n                  rowClassName=\"editable-row\"\n                  pagination={{\n                    onChange: this.cancel,\n                  }}\n                  rowKey={(data)=>data.key}\n                />\n              </EditableContext.Provider>\n            </div>\n          : <Spin style={{marginLeft:'900px',marginTop:'200px'}} tip=\"加载中...\" size='large'/>\n        }\n      </div>\n      \n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component{ \n    render(){\n        return <EditableFormTable />\n    }\n}\n\nexport default Mytable;"]},"metadata":{},"sourceType":"module"}