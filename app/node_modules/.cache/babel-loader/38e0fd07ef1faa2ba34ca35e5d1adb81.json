{"ast":null,"code":"import _defineProperty from \"/home/duo/\\u684C\\u9762/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH, DELETE, SEARCH } from '../actionType/actionType'; //初始化数据\n\nconst initstate = {\n  data: ''\n}; //最终的数据处理结果\n\nexport const todolist = (state = initstate, action) => {\n  switch (action.type) {\n    //获取页面数据\n    case FETCH:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n    //删除\n\n    case DELETE:\n      let data = state.data;\n      console.log(data);\n      data.forEach((item, index) => {\n        if (item._id === action.payload) {\n          data.splice(index, 1);\n        }\n      });\n      return _objectSpread({}, state, {\n        data: data\n      });\n    //搜索\n\n    case SEARCH:\n      let value = action.payload;\n      let datas = state.data;\n      let dataArr = [];\n\n      for (let i in datas) {\n        if (datas[i].name.search(value) >= 0) {\n          dataArr.push({\n            _id: datas[i]._id,\n            name: datas[i].name,\n            desc: datas[i].desc,\n            url: datas[i].url,\n            type: datas[i].type\n          });\n        }\n      }\n\n      return _objectSpread({}, state, {\n        data: dataArr\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/duo/桌面/app/src/reducers/todolist.js"],"names":["FETCH","DELETE","SEARCH","initstate","data","todolist","state","action","type","payload","console","log","forEach","item","index","_id","splice","value","datas","dataArr","i","name","search","push","desc","url"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAcC,MAAd,EAAqBC,MAArB,QAAkC,0BAAlC,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAC;AADS,CAAlB,C,CAIA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACH,SAAP,EAAiBI,MAAjB,KAA4B;AAChD,UAAOA,MAAM,CAACC,IAAd;AAEI;AACA,SAAKR,KAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;AAKJ;;AACA,SAAKR,MAAL;AAAA,UACSG,IADT,GACiBE,KADjB,CACSF,IADT;AAEIM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAA,MAAAA,IAAI,CAACQ,OAAL,CAAa,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACzB,YAAGD,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAvB,EAA+B;AAC3BL,UAAAA,IAAI,CAACY,MAAL,CAAYF,KAAZ,EAAkB,CAAlB;AACH;AACJ,OAJD;AAKA,+BACOR,KADP;AAEIF,QAAAA,IAAI,EAAEA;AAFV;AAKJ;;AACA,SAAKF,MAAL;AACI,UAAIe,KAAK,GAAGV,MAAM,CAACE,OAAnB;AACA,UAAIS,KAAK,GAAGZ,KAAK,CAACF,IAAlB;AACA,UAAIe,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAT,IAAcF,KAAd,EAAoB;AAChB,YAAGA,KAAK,CAACE,CAAD,CAAL,CAASC,IAAT,CAAcC,MAAd,CAAqBL,KAArB,KAA+B,CAAlC,EAAoC;AAChCE,UAAAA,OAAO,CAACI,IAAR,CAAa;AACTR,YAAAA,GAAG,EAACG,KAAK,CAACE,CAAD,CAAL,CAASL,GADJ;AAETM,YAAAA,IAAI,EAACH,KAAK,CAACE,CAAD,CAAL,CAASC,IAFL;AAGTG,YAAAA,IAAI,EAACN,KAAK,CAACE,CAAD,CAAL,CAASI,IAHL;AAITC,YAAAA,GAAG,EAACP,KAAK,CAACE,CAAD,CAAL,CAASK,GAJJ;AAKTjB,YAAAA,IAAI,EAACU,KAAK,CAACE,CAAD,CAAL,CAASZ;AALL,WAAb;AAOH;AACJ;;AACD,+BACOF,KADP;AAEIF,QAAAA,IAAI,EAAEe;AAFV;;AAKJ;AACI,aAAOb,KAAP;AA7CR;AA+CH,CAhDM","sourcesContent":["import {FETCH,DELETE,SEARCH} from '../actionType/actionType';\n\n//初始化数据\nconst initstate = {\n    data:'',\n}\n\n//最终的数据处理结果\nexport const todolist = (state=initstate,action) => {\n    switch(action.type){\n\n        //获取页面数据\n        case FETCH :\n            return {\n                ...state,\n                data: action.payload\n            }\n\n        //删除\n        case DELETE :\n            let {data} = state;\n            console.log(data)\n            data.forEach((item,index) => {\n                if(item._id === action.payload){\n                    data.splice(index,1)\n                }\n            });\n            return {\n                ...state,\n                data: data\n            }\n\n        //搜索\n        case SEARCH :\n            let value = action.payload;\n            let datas = state.data;\n            let dataArr = [];\n            for (let i in datas){\n                if(datas[i].name.search(value) >= 0){\n                    dataArr.push({\n                        _id:datas[i]._id,\n                        name:datas[i].name,\n                        desc:datas[i].desc,\n                        url:datas[i].url,\n                        type:datas[i].type,\n                    })\n                }\n            }    \n            return {\n                ...state,\n                data: dataArr\n        }\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}